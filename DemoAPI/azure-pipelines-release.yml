trigger: none

resources:
  pipelines:
  - pipeline: build
    source: 'demo-aks-app - BUILD'
  
variables:
  vmImageName: 'ubuntu-latest'
  azureSubscription: 'Demo Account'

stages:

 - stage: CI
   displayName: CI Stage 
   variables:
     kubernetesCluster: 'rutzsco-aks1'
     resourceGroupName: 'rutzsco-aks'  
   jobs:
   - deployment: Deploy
     displayName: Deploy
     environment: 'CI'
     pool:
        vmImage: $(vmImageName)   
      
     strategy:
        runOnce:
          deploy:
  
            steps:
            - task: PublishPipelineArtifact@1
              inputs:
                targetPath: '$(Pipeline.Workspace)/build/Helm'
                artifact: 'Helm'
                publishLocation: 'pipeline'
            - task: PublishPipelineArtifact@1
              inputs:
                targetPath: '$(Pipeline.Workspace)/build/Deploy'
                artifact: 'Deploy'
                publishLocation: 'pipeline'
            - task: HelmInstaller@0
              displayName: 'Install Helm 3.5.4'
              inputs:
                helmVersion: 3.5.4
                checkLatestHelmVersion: false

            - task: PowerShell@2
              inputs:
                targetType: 'filePath'
                filePath: '$(Pipeline.Workspace)/build/Deploy/GetServiceStatus.ps1'
                failOnStderr: true
                showWarnings: true
              displayName: 'Get Current Slot'

            - task: HelmDeploy@0
              displayName: 'helm upgrade'
              inputs:
                connectionType: 'Azure Resource Manager'
                azureSubscription: '$(azureSubscription)'
                azureResourceGroup: '$(resourceGroupName)'
                kubernetesCluster: '$(kubernetesCluster)'
                namespace: 'demo-api'
                command: 'upgrade'
                chartType: 'FilePath'
                chartPath: '$(Pipeline.Workspace)/build/Helm/api-$(resources.pipeline.build.runName).tgz'
                chartVersion: '$(resources.pipeline.build.runName)'
                releaseName: 'demo-api-green'
                overrideValues: 'image.tag=$(resources.pipeline.build.runName),applicationVersion=$(resources.pipeline.build.runName),deploymentSlot=$(DEPLOY_NEXT_SLOT)'
                resetValues: true
                
          postRouteTraffic:
            pool: server  
            steps:
            - task: ManualValidation@0
              timeoutInMinutes: 1440 # task times out in 1 day
              inputs:
                notifyUsers: |
                    scrutz@microsoft.com
                instructions: 'Please validate deployment'
                onTimeout: 'resume'
          on:
            success:          
              steps:
              - download: current
              - script: ls $(Pipeline.Workspace)
              - task: HelmInstaller@0
                displayName: 'Install Helm 3.5.4'
                inputs:
                  helmVersion: 3.5.4
                  checkLatestHelmVersion: false
              - task: KubectlInstaller@0
                inputs:
                  kubectlVersion: 'latest'
              - task: Kubernetes@1
                inputs:
                  connectionType: 'Kubernetes Service Connection'
                  kubernetesServiceEndpoint: 'RUTZSCO-AKS1'
                  namespace: 'demo-api'
                  command: 'apply'
                  arguments: '-f $(Pipeline.Workspace)/Deploy/demo-api-ingress-blue.yaml'
              - task: HelmDeploy@0
                displayName: 'helm upgrade'
                inputs:
                  connectionType: 'Azure Resource Manager'
                  azureSubscription: '$(azureSubscription)'
                  azureResourceGroup: '$(resourceGroupName)'
                  kubernetesCluster: '$(kubernetesCluster)'
                  namespace: 'demo-api'
                  command: 'upgrade'
                  chartType: 'FilePath'
                  chartPath: '$(Pipeline.Workspace)/Helm/api-$(resources.pipeline.build.runName).tgz'
                  chartVersion: '$(resources.pipeline.build.runName)'
                  releaseName: 'demo-api-blue'
                  overrideValues: 'image.tag=$(resources.pipeline.build.runName),applicationVersion=$(resources.pipeline.build.runName),deploymentSlot=blue'
                  resetValues: true
            